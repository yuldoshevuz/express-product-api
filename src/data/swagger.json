{
  "openapi": "3.0.0",
  "info": {
    "title": "Express Product API",
    "version": "1.0.0",
    "description": "A RESTful API for managing products with JWT authentication. Built using Node.js, Express.js, and PostgreSQL with Sequelize ORM."
  },
  "servers": [
    {
      "url": "http://localhost:5002",
      "description": "Local server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "description": "Authenticate a user and return a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Retrieve all products",
        "description": "Get a list of all products.",
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "description": "Add a new product to the inventory.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "summary": "Update an existing product",
        "description": "Modify the details of an existing product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Remove a product from the inventory.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRegistration": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": ["fullName", "email", "password"]
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": ["email", "password"]
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "fullName": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "johndoe@gmail.com"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-07-18T12:00:00Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-07-18T12:00:00Z"
              }
            }
          }
        }
      },
      "UserLoginResponse": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "example": 1
              },
              "fullName": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "johndoe@gmail.com"
              },
              "token": {
                "type": "string",
                "example": "your-jwt-token"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-07-18T12:00:00Z"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2024-07-18T12:00:00Z"
              }
            }
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "description": {
            "type": "string",
            "example": "Product Description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-07-18T12:00:00Z"
          }
        }
      },
      "ProductCreation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Product Name"
          },
          "description": {
            "type": "string",
            "example": "Product Description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 99.99
          }
        },
        "required": ["name", "description", "price"]
      },
      "ProductUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Product Name"
          },
          "description": {
            "type": "string",
            "example": "Updated Product Description"
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 109.99
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}